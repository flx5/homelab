# playbook.yml
- name: 'Provision Image'
  hosts: all
  become: true
  gather_facts: yes
  vars:
    disks:
      - ata-TOSHIBA_MG08ACA16TE_61Q0A1WLF57H
      - ata-TOSHIBA_MG08ACA16TE_61Q0A1YBF57H

  vars_files:
    - ../ansible/vars/mail_vars.yml

  roles:
    - '../ansible/roles/postfix'
    - '../ansible/roles/timezone'

  tasks:
    - name: Add Backports required for Cockpit
      ansible.builtin.apt_repository:
        repo: deb http://deb.debian.org/debian "{{ansible_distribution_release}}-backports" main
        state: present

    - name: Update Package Cache
      ansible.builtin.apt:
        update_cache: true
        # Valid for 24h
        cache_valid_time: 86400

    - name: Upgrade Packages
      ansible.builtin.apt:
        pkg: '*'
        state: 'latest'
 
    - name: Install smartmontools
      ansible.builtin.apt:
        pkg: smartmontools
        state: present
 
    - name: Install LVM
      ansible.builtin.apt:
        pkg:
          - lvm2
        state: present
 
    - name: Install Borg Backup
      ansible.builtin.apt:
        pkg:
          - borgbackup
        state: present
        
    - name: Install Sensors
      ansible.builtin.apt:
        pkg:
          - 'lm-sensors'
        state: present

    # Install Cockpit
    - name: Install Cockpit
      ansible.builtin.apt:
        pkg:
          - 'cockpit'
          - 'cockpit-networkmanager'
          - 'cockpit-storaged'
          - 'cockpit-packagekit'
          - 'cockpit-podman'
          - 'cockpit-pcp'
        state: present
        default_release: "{{ansible_distribution_release}}-backports"

    - name: Install mdadm
      ansible.builtin.apt:
        pkg: mdadm
        state: present

    - name: Copy mdadm.conf
      notify: Update mdadm
      ansible.builtin.copy:
        src: files/mdadm.conf
        dest: /etc/mdadm/mdadm.conf
        owner: root
        group: root
        mode: '0644'

    - name: Install cpupower
      ansible.builtin.apt:
        pkg: linux-cpupower
        state: present

    - name: Install LUKS
      ansible.builtin.apt:
        pkg: cryptsetup
        state: present

    - name: Copy md0.key
      ansible.builtin.copy:
        content: "{{ lookup('community.sops.sops', 'keys/md0.enc.key') }}"
        dest: /root/md0.key
        owner: root
        group: root
        mode: '0400'

    - name: RAID Crypto
      community.general.crypttab:
        name: md0_crypt
        backing_device: /dev/md0
        password: /root/md0.key
        state: present
        opts: luks

    - name: Install hdparm
      ansible.builtin.apt:
        pkg: hdparm
        state: present

    - name: Copy hdparm.conf
      ansible.builtin.template:
        src: files/hdparm.conf
        dest: /etc/hdparm.conf
        owner: root
        group: root
        mode: '0644'
        
    - name: Copy spindown.sh
      ansible.builtin.template:
        src: files/spindown.sh
        dest: /usr/sbin/spindown.sh
        owner: root
        group: root
        mode: '0744'
        
    - name: Copy spindown_boot.sh
      ansible.builtin.template:
        src: files/spindown_boot.sh
        dest: /usr/sbin/spindown_boot.sh
        owner: root
        group: root
        mode: '0744'
        
    - name: Copy spinup.sh
      ansible.builtin.template:
        src: files/spinup.sh
        dest: /usr/sbin/spinup.sh
        owner: root
        group: root
        mode: '0744'
        
    - name: Shutdown drives on boot because they seem to ignore hdparm's sleep setting
      ansible.builtin.cron:
        name: "Shutdown drives at boot"
        special_time: reboot
        job: "/usr/sbin/spindown_boot.sh"
        
    - name: Add backup user for nas
      ansible.builtin.user:
        name: nasbackup
        password_lock: yes
        uid: 1100

    - name: Set ssh key for backup
      ansible.posix.authorized_key:
        user: nasbackup
        key: "{{ lookup('file', 'nas_key.pub') }}"
        state: present
        exclusive: True
        key_options: 'command="borg serve --append-only --restrict-to-repository /home/nasbackup/repository",restrict'
        
    - name: Create /home/nasbackup/repo
      ansible.builtin.file:
        path: /home/nasbackup/repository
        state: directory
        mode: '0755'
        owner: nasbackup
        group: nasbackup

    - name: Copy sshd.conf
      notify: Restart sshd
      ansible.builtin.template:
        src: files/sshd.conf
        dest: /etc/ssh/sshd_config.d/sshd.conf
        owner: root
        group: root
        mode: '0644'
        
    - name: Copy pam_session.sh
      ansible.builtin.template:
        src: files/pam_session.sh
        dest: /etc/pam_session.sh
        owner: root
        group: root
        mode: '0744'
        
    - name: Copy pam_standby.sh
      ansible.builtin.template:
        src: files/pam_standby.sh
        dest: /etc/pam_standby.sh
        owner: root
        group: root
        mode: '0744' 
        
    - name: Configure SSH PAM Disk Suspend
      ansible.builtin.lineinfile:
        path: /etc/pam.d/sshd
        line: 'session     optional    pam_exec.so quiet /etc/pam_session.sh'
        # Disable for now in favor of suspend due to fan noise
        state: present
        
    - name: Configure SSH System Suspend
      ansible.builtin.lineinfile:
        path: /etc/pam.d/sshd
        line: 'session     optional    pam_exec.so quiet /etc/pam_standby.sh'
        state: absent
        
    - name: Copy check_array.sh
      ansible.builtin.copy:
        src: files/check_array.sh
        dest: /usr/sbin/check_array.sh
        owner: root
        group: root
        mode: '0744'
        
    - name: Override mdadm cron
      ansible.builtin.copy:
        src: files/mdadm.cron
        dest: /etc/cron.d/mdadm
        owner: root
        group: root
        mode: '0644'
        
    - name: Mount nas backup Folder
      ansible.posix.mount:
        path: /home/nasbackup/repository
        src: /dev/hdd/nas_backup
        fstype: ext4
        state: present
        opts: nofail

  handlers:
    - name: Update mdadm
      ansible.builtin.command: update-initramfs -u
    - name: Restart sshd
      service:
        name: sshd
        state: restarted
